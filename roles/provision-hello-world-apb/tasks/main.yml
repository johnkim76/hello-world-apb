#############################################################################
# Provision hello-world
# This role executes much of the needed functionality to provision an
# application using an Ansible Playbook Bundle.  Included in the comments
# below are some sample resources for getting started deploying an application
# to OpenShift.
#############################################################################

- name: update_last_op
  asb_last_operation:
    description: "[hello-world]: Starting Provision"

#############################################################################
# An OpenShift Origin deployment configuration provides a replication
# controller, spins up pods, and also provides the ability to transition from
# one deployment of an image to a new one.
# https://docs.openshift.org/latest/architecture/core_concepts/deployments.html#deployments-and-deployment-configurations
#############################################################################
- name: create deployment config
  openshift_v1_deployment_config:
    name: hello-world
    namespace: '{{ namespace }}'
    labels:
      app: hello-world
      service: hello-world
    replicas: 1
    selector:
      app: hello-world
      service: hello-world
    spec_template_metadata_labels:
      app: hello-world
      service: hello-world
    containers:
    - env:
      image: docker.io/ansibleplaybookbundle/hello-world:latest
      name: hello-world
      ports:
      - container_port: 8080
        protocol: TCP

- name: update_last_op
  asb_last_operation:
    description: "[hello-world]: Finished creating DC [step 1/3]"

#############################################################################
# A Kubernetes service serves as an internal load balancer.  It identifies a
# set of replicated pods in order to proxy the connections it receives to them.
# https://docs.openshift.org/latest/architecture/core_concepts/pods_and_services.html#services
#############################################################################
- name: create hello-world service
  k8s_v1_service:
    name: hello-world
    namespace: '{{ namespace }}'
    labels:
      app: hello-world
      service: hello-world
    selector:
      app: hello-world
      service: hello-world
    ports:
      - name: web
        port: 8080
        target_port: 8080

- name: update_last_op
  asb_last_operation:
    description: "[hello-world]: Finished creating service [step 2/3]"

#############################################################################
# An OpenShift Origin route exposes a service at a host name, so that external
# clients can reach it by name. Each route consists of a name, a service
# selector, and an optional security configuration.
# https://docs.openshift.org/latest/architecture/core_concepts/routes.html
#############################################################################
- block:
    - name: create hello-world route
      openshift_v1_route:
        name: hello-world
        namespace: "{{ 'invalid_namespace' if enable_failure else 'namespace' }}"
        spec_port_target_port: web
        labels:
          app: hello-world
          service: hello-world
        to_name: hello-world
  rescue:
    - debug: var=ansible_failed_result.msg
    ####################################
    # Custom Error Message
    ####################################
    - name: Writting Termination Message '{{ terminationMessagePathFile }}'
      shell: echo "[Error Creating Route] - {{ ansible_failed_result.msg }}" > {{ terminationMessagePathFile }}

    - fail: msg="[APB Failed]"

- name: update_last_op
  asb_last_operation:
    description: "[hello-world]: Finished creating route [step 3/3]"
